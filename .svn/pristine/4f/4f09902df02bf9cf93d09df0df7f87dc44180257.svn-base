package schack;

/**
 * Created by eriro331 on 2014-03-06.
 */
public class Bishop extends AbstractPiece
{

    @Override
    public boolean isMoveLegal(final int oldX, final int oldY, final int newX, final int newY, final PieceColor color,
			       Board board)
    {
	//return ((oldX - newX) / (oldY - newY) == 1 || ((oldX - newX) / (oldY - newY)) == -1) && (board.getPieceAt(newX, newY) == null || board.getPieceAt(newX, newY).getPieceColor() != color);

	System.out.println("");
	if (Math.abs((oldX - newX) / (oldY - newY)) == 1) {//move is diagonal
	    if (board.getPieceAt(newX, newY) != null) {//piece at target location
		if (board.getPieceAt(newX, newY).getPieceColor() != color) {//enemy piece
		    if (!checkCollisionDiagonal(oldX, oldY, newX, newY, board)) {
			return true;
		    }

		}
		return false;
	    }
	    if (!checkCollisionDiagonal(oldX, oldY, newX, newY, board)) {
		return true;
	    }

	}

	return false;
    }

    @Override public String toString() {
	return "B  ";
    }
}
